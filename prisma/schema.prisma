generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum LogType {
  GOODS
  SERVICES
}

model Log {
  id          Int     @id @default(autoincrement())
  title       String  @db.VarChar(255)
  description String  @default("") @db.VarChar(1024)
  type        LogType
  qty         Int
  cost        Decimal
  invoice     Invoice @relation(fields: [invoiceId], references: [id])
  invoiceId   Int

  @@index([invoiceId])
}

model Invoice {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  paid        Boolean  @default(false)
  dateOfIssue DateTime @default(now())
  currency    String   @db.VarChar(255)
  sender      Entity   @relation("sender", fields: [senderId], references: [id])
  senderId    Int
  recipient   Entity   @relation("recipient", fields: [recipientId], references: [id])
  recipientId Int
  logs        Log[]
  user        User     @relation(fields: [userId], references: [id])
  userId      Int

  @@index([userId])
  @@index([senderId])
  @@index([recipientId])
}

model Entity {
  id               Int       @id @default(autoincrement())
  name             String    @db.VarChar(255)
  address          String    @db.VarChar(1024)
  invoicesSent     Invoice[] @relation("sender")
  invoicesReceived Invoice[] @relation("recipient")
  user             User      @relation(fields: [userId], references: [id])
  userId           Int

  @@index([userId])
}

model Profile {
  id     Int    @id @default(autoincrement())
  name   String @db.VarChar(255)
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
}

model Session {
  id        String   @id @db.VarChar(255)
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())

  @@index([userId])
}

model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique @db.VarChar(255)
  password          String    @db.VarChar(255)
  encryptedKey      String    @db.VarChar(255)
  offlineModeActive Boolean   @default(false)
  invoices          Invoice[]
  profile           Profile?
  session           Session?
  entity            Entity[]
}
